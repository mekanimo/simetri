"""Let the IDEs know about the dynamically created attributes of the Shape class."""

from typing import Sequence, Union, List

from .all_enums import *
from ..colors import Color
class Shape:

    def __init__(self):
        self.line_alpha: float = 1,
        self.line_cap: LineCap = LineCap.BUTT,
        self.line_color: Color = Color(0.0, 0.0, 0.0),
        self.line_dash_array: Union[list, LineDashArray] = None,
        self.line_dash_phase: float = 0,
        self.double: None = None,
        self.double_distance: float = 2,
        self.draw_fillets: bool = False,
        self.draw_markers: bool = False,
        self.fillet_radius: float = None,
        self.line_join: LineJoin = LineJoin.MITER,
        self.marker_color: Color = Color(0.0, 0.0, 0.0),
        self.marker_type: MarkerType = MarkerType.FCIRCLE,
        self.marker_size: float = 3,
        self.markers_only: bool = False,
        self.line_miter_limit: float = 10,
        self.smooth: bool = False,
        self.stroke: bool = True,
        self.line_width: float = 1,
        self.fill_alpha: float = 1,
        self.back_style: BackStyle = BackStyle.COLOR,
        self.fill_color: Color = Color(0.0, 0.0, 0.0),
        self.fill: bool = True,
        self.grid_alpha: float = 0.5,
        self.grid_back_color: Color = Color(1.0, 1.0, 1.0),
        self.grid_line_color: Color = Color(0.573, 0.584, 0.569),
        self.grid_line_width: float = 0.5,
        self.fill_mode: FillMode = FillMode.EVENODD,
        self.pattern_angle: float = 0,
        self.pattern_color: Color = Color(0.0, 0.0, 0.0),
        self.pattern_distance: float = 3,
        self.pattern_line_width: float = 0,
        self.pattern_type: PatternType = PatternType.HORIZONTAL_LINES,
        self.pattern_points: int = 5,
        self.pattern_radius: float = 10,
        self.pattern_x_shift: float = 0,
        self.pattern_y_shift: float = 0,
        self.shade_bottom_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_color_wheel: bool = False,
        self.shade_color_wheel_black: bool = False,
        self.shade_color_wheel_white: bool = False,
        self.shade_inner_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_left_color: Color = Color(0.0, 0.0, 0.0),
        self.shade_lower_left_color: Color = Color(0.0, 0.0, 0.0),
        self.shade_lower_right_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_middle_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_middle_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_outer_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_middle_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_middle_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_middle_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_outer_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_middle_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_middle_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_middle_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_outer_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_middle_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_middle_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_outer_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_right_color: Color = Color(1.0, 1.0, 1.0),
        self.shade_top_color: Color = Color(0.0, 0.0, 0.0),
        self.shade_upper_left_color: Color = Color(0.0, 0.0, 0.0),
        self.shade_upper_right_color: Color = Color(1.0, 1.0, 1.0),